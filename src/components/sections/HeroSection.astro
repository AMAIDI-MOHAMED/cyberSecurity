---
import Button from '@ui/Button.astro';
import Icon from '@ui/icons/Icon.astro';

interface Props {
  content: {
    title: string;
    subtitle: string;
    description: string;
    primaryCTA: { text: string; href: string };
    secondaryCTA: { text: string; href: string };
  };
  showPromoBanner?: boolean;
  showTypewriter?: boolean;
  showAnimation?: boolean;
}

const { content, showPromoBanner = false, showTypewriter = false, showAnimation = false } = Astro.props;
---

<section class="relative bg-gradient-to-br from-teal-50 via-white to-slate-50 min-h-screen flex items-center overflow-hidden">
  <!-- Enhanced Background Pattern -->
  <div class="absolute inset-0 opacity-40">
    <div class="absolute inset-0" style="background-image: radial-gradient(circle at 1px 1px, rgba(15, 118, 110, 0.15) 1px, transparent 0); background-size: 20px 20px;"></div>
    <!-- Subtle grid lines (no animation) -->
    <div class="absolute inset-0 opacity-15">
      <div class="h-full w-full bg-gradient-to-r from-transparent via-teal-200/30 to-transparent"></div>
      <div class="absolute top-0 left-0 w-full h-full bg-gradient-to-b from-transparent via-cyan-200/20 to-transparent"></div>
    </div>
  </div>
  
  <!-- Static Background Shapes (animations removed for performance) -->
  <div class="absolute top-10 right-10 w-72 h-72 bg-teal-500/10 rounded-full blur-3xl"></div>
  <div class="absolute bottom-20 left-20 w-96 h-96 bg-blue-500/5 rounded-full blur-3xl"></div>
  <div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-64 h-64 bg-cyan-500/5 rounded-full blur-2xl"></div>
  
  <div class="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20">
    <div class="grid lg:grid-cols-2 gap-12 lg:gap-20 items-center">
      <!-- Content -->
      <div class="space-y-8">
        <!-- Announcement Banner -->
        {showPromoBanner && (
          <div class="inline-flex items-center px-4 py-2 rounded-full bg-gradient-to-r from-teal-50 to-cyan-50 border border-teal-200 text-teal-700 text-sm font-medium shadow-lg">
            <Icon name="shield" class="w-4 h-4 mr-2" />
            <span>Finland's Leading Cybersecurity Partner</span>
            <Icon name="arrowRight" class="w-4 h-4 ml-2" />
          </div>
        )}
        
        <!-- Hero Content with conditional Typewriter -->
        <div class="space-y-6">
          {showTypewriter ? (
            <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold text-slate-900 leading-tight">
              <span class="block relative">
                <span class="bg-gradient-to-r from-teal-600 via-cyan-600 to-blue-600 bg-clip-text text-transparent font-bold">
                  <span id="typewriter" class="typewriter-text tracking-normal"></span>
                </span>
                <span class="typewriter-cursor"></span>
                <div id="typewriter-underline" class="absolute bottom-0 left-0 h-2 bg-gradient-to-r from-teal-500 to-cyan-500 rounded-full shadow-lg"></div>
              </span>
            </h1>
          ) : (
            <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold text-slate-900 leading-tight">
              {content.title}
            </h1>
          )}
          
          <p class="text-xl sm:text-2xl text-slate-600 font-medium">{content.subtitle}</p>
          <p class="text-lg text-slate-500 leading-relaxed max-w-2xl">{content.description}</p>
          
          <div class="flex flex-col sm:flex-row gap-4 pt-2">
            <Button href={content.primaryCTA.href} variant="primary" className="transform transition-transform duration-300 hover:scale-105">
              <span class="relative z-10 flex items-center">
                <Icon name="shield-check" class="w-4 h-4 mr-2" />
                {content.primaryCTA.text}
              </span>
              <Icon name="arrowRight" class="w-5 h-5 ml-2" />
            </Button>
            <Button href={content.secondaryCTA.href} variant="secondary" className="transform transition-transform duration-300 hover:scale-105">
              <Icon name="eye" class="w-4 h-4 mr-2" />
              {content.secondaryCTA.text}
            </Button>
          </div>
        </div>
      </div>
      
      <!-- Right side visual animation (conditional) -->
      {showAnimation && (
        <div class="relative lg:block hidden">
          <div class="relative w-full h-96 lg:h-[500px]">
            <div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-64 h-64">
              <div class="relative w-full h-full">
                <div class="absolute inset-0 bg-gradient-to-b from-teal-400 to-blue-600 rounded-t-full opacity-15"></div>
                <div class="absolute inset-2 border-4 border-teal-500 rounded-t-full shadow-[0_0_20px_rgba(20,184,166,0.4)]"></div>
                <div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2">
                  <Icon name="shield" class="w-16 h-16 text-teal-600" />
                </div>
              </div>
            </div>
            <div class="absolute top-8 right-8 w-12 h-12 bg-gradient-to-br from-teal-100 to-cyan-100 rounded-lg flex items-center justify-center shadow-lg">
              <Icon name="cloud" class="w-6 h-6 text-teal-600" />
            </div>
            <div class="absolute bottom-12 left-8 w-10 h-10 bg-gradient-to-br from-blue-100 to-indigo-100 rounded-lg flex items-center justify-center shadow-lg">
              <Icon name="server" class="w-5 h-5 text-blue-600" />
            </div>
            <div class="absolute top-16 left-16 w-8 h-8 bg-gradient-to-br from-emerald-100 to-green-100 rounded-lg flex items-center justify-center shadow-lg">
              <Icon name="database" class="w-4 h-4 text-emerald-600" />
            </div>
          </div>
        </div>
      )}
    </div>
  </div>
</section>

{showTypewriter && (
  <style>
    .typewriter-text { 
      display: inline-block; 
      min-width: 22ch;
      font-weight: 700;
    }
    .typewriter-cursor {
      display: inline-block;
      width: 3px; 
      height: 1.1em; 
      margin-left: 8px; 
      vertical-align: text-bottom;
      background: linear-gradient(180deg, #14b8a6, #06b6d4);
      animation: cursor-blink 1s steps(1, end) infinite;
      border-radius: 2px;
      box-shadow: 0 0 10px rgba(20, 184, 166, 0.5);
    }
    @keyframes cursor-blink { 
      0%, 49% { opacity: 1; transform: scale(1); } 
      50%, 100% { opacity: 0.3; transform: scale(0.9); } 
    }
  </style>
)}

{showTypewriter && (
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const el = document.getElementById('typewriter');
      const underline = document.getElementById('typewriter-underline');
      if (!el || !underline) return;

      const phrases = ['Cyber Security Finland'];
      const cfg = { type: 100, hold: 3000, gap: 1000 };
      let pi = 0, ci = 0, del = false;

      function setUnderlineWidth() {
        if (!el || !underline) return;
        const rect = el.getBoundingClientRect();
        underline.style.width = rect.width + 'px';
      }

      function tick() {
        if (!el || !underline) return;
        const word = phrases[pi];
        
        if (!del) {
          ci++;
          el.textContent = word.slice(0, ci);
          setUnderlineWidth();
          if (ci === word.length) {
            return setTimeout(() => { del = true; tick(); }, cfg.hold);
          }
          setTimeout(tick, cfg.type);
        } else {
          ci--;
          el.textContent = word.slice(0, Math.max(ci, 0));
          setUnderlineWidth();
          if (ci <= 0) {
            del = false; 
            ci = 0; 
            pi = (pi + 1) % phrases.length;
            return setTimeout(tick, cfg.gap);
          }
          setTimeout(tick, 50);
        }
      }

      el.textContent = '';
      setUnderlineWidth();
      setTimeout(tick, 800);

      window.addEventListener('resize', setUnderlineWidth);
    });
  </script>
)}
