---
// filepath: c:\Users\Administrator\Desktop\New folder (3)\src\components\Header.astro
import { menu } from '@data/menu.js';
import Icon from '@ui/icons/Icon.astro';
import SearchBar from './navigation/SearchBar.astro';

const currentPath = Astro.url.pathname;
const lang = 'en';
---

<header class="bg-white shadow-sm border-b border-slate-200 sticky top-0 z-[70] transition-all duration-300 ease-in-out backdrop-blur-sm bg-white/95">
  <!-- Header utility bar simplified -->
  <div class="bg-gradient-to-r from-slate-900 via-slate-800 to-slate-900 text-white text-xs sm:text-sm py-1.5 overflow-hidden relative">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex items-center justify-between relative z-10">
      <div class="hidden sm:flex space-x-5">
        <span class="flex items-center group cursor-pointer hover:text-teal-300 transition-all duration-300 transform hover:scale-105 hover:translate-y-0.5 relative">
          <Icon name="phone" class="w-4 h-4 mr-1 group-hover:scale-125 group-hover:rotate-12 transition-all duration-300" /> 
          <span class="group-hover:tracking-wide transition-all duration-300 relative">
            +358 XX XXX XXXX
            <div class="absolute -bottom-1 left-0 w-0 h-0.5 bg-gradient-to-r from-teal-400 to-cyan-400 transition-all duration-500 group-hover:w-full"></div>
          </span>
        </span>
        <span class="flex items-center group cursor-pointer hover:text-teal-300 transition-all duration-300 transform hover:scale-105 hover:translate-y-0.5 relative">
          <Icon name="email" class="w-4 h-4 mr-1 group-hover:scale-125 group-hover:rotate-12 transition-all duration-300" /> 
          <span class="group-hover:tracking-wide transition-all duration-300 relative">
            info@cybersecurity.fi
            <div class="absolute -bottom-1 left-0 w-0 h-0.5 bg-gradient-to-r from-teal-400 to-cyan-400 transition-all duration-500 group-hover:w-full"></div>
          </span>
        </span>
      </div>
      <div class="sm:hidden flex items-center text-[11px] gap-3">
        <a href="tel:+358XXXXXXXXX" class="flex items-center group hover:text-teal-300 transition-all duration-300 transform hover:scale-105 hover:translate-y-0.5 relative">
          <Icon name="phone" class="w-4 h-4 mr-1 group-hover:scale-125 group-hover:rotate-12 transition-all duration-300" /> 
          <span class="group-hover:tracking-wide transition-all duration-300 relative">
            +358 XX XXX XXXX
            <div class="absolute -bottom-1 left-0 w-0 h-0.5 bg-gradient-to-r from-teal-400 to-cyan-400 transition-all duration-500 group-hover:w-full"></div>
          </span>
        </a>
      </div>
      
      <!-- Google Translate widget -->
      <div id="langToggle" class="flex bg-slate-800 rounded-md p-1 hover:bg-slate-700 transition-colors duration-200 relative overflow-hidden">
        <!-- subtle hover only -->
      </div>
    </div>
  </div>

  <!-- Main navigation -->
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <nav class="h-14 flex items-center justify-between relative" aria-label="Main navigation">
      <a href="/" class="flex items-center px-2.5 py-1.5 rounded-md transition-all duration-500 hover:bg-slate-50 focus:outline-none focus-visible:ring-2 focus-visible:ring-teal-500 hover:scale-105 group relative overflow-hidden">
        <img src="/logo.png" alt="Cybersecurity Finland" class="block h-7 sm:h-8 lg:h-9 w-auto object-contain group-hover:scale-110 group-hover:rotate-2 transition-all duration-500 relative z-10" decoding="async" loading="eager" style="filter: drop-shadow(0 0 1px rgba(0,0,0,0.25)) contrast(1.1) brightness(0.9);" />
        <div class="absolute -inset-1 bg-gradient-to-r from-teal-500 to-cyan-500 rounded-lg blur opacity-0 group-hover:opacity-30 transition-all duration-500"></div>
        <div class="absolute inset-0 bg-gradient-to-r from-teal-50/50 to-cyan-50/50 opacity-0 group-hover:opacity-100 transition-opacity duration-500 rounded-md"></div>
        <!-- Animated border effect -->
        <div class="absolute inset-0 rounded-md border-2 border-transparent group-hover:border-teal-200 transition-all duration-500"></div>
      </a>

      <!-- Desktop Navigation -->
      <div class="hidden lg:flex items-center gap-1 flex-1 justify-center min-w-0">
        {menu && menu.map(item => {
          const href = item.href;
          const isActive = currentPath === href || currentPath.startsWith(href + '/') || (href !== '/' && currentPath.startsWith(href));
          const hasChildren = item.children && item.children.length > 0;
          const label = item.label_en; // Always use English labels
          
          return <div class="relative group">
            {hasChildren ? (
              <>
                <button class={`flex items-center px-2.5 py-1 text-[12px] font-medium rounded-md transition-all duration-500 focus:outline-none focus-visible:ring-2 focus-visible:ring-teal-500 transform hover:scale-105 hover:shadow-md hover:-translate-y-0.5 relative overflow-hidden group ${isActive ? 'text-teal-700 bg-teal-50' : 'text-slate-700 hover:text-teal-700 hover:bg-gradient-to-r hover:from-slate-50 hover:to-teal-50/50'}`} aria-haspopup="true" aria-expanded="false">
                  <span class="relative z-10 group-hover:tracking-wide transition-all duration-300">{label}</span>
                  <Icon name="chevronDown" class="w-3 h-3 ml-1 transform group-hover:rotate-180 group-hover:scale-110 transition-all duration-500" />
                  <div class="absolute bottom-0 left-1/2 transform -translate-x-1/2 w-0 h-0.5 bg-gradient-to-r from-teal-500 to-cyan-500 transition-all duration-500 group-hover:w-full"></div>
                  <div class="absolute inset-0 bg-gradient-to-r from-teal-500/10 to-cyan-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-md animate-pulse"></div>
                </button>
                
                {/* Dropdown menu (uniform style for all, including SERVICES) */}
                <div class="absolute left-0 top-full min-w-48 bg-white shadow-xl rounded-lg border border-slate-200 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 transform translate-y-2 group-hover:translate-y-0 z-50 backdrop-blur-sm bg-white/95">
                  <div class="py-2 relative">
                    <div class="absolute inset-0 bg-gradient-to-br from-teal-50/30 to-cyan-50/20 rounded-lg"></div>
                    {item.children && item.children.map(sub => {
                      const subHref = sub.href;
                      const subLabel = sub.label_en;
                      return <a href={subHref} class="block px-4 py-1.5 text-[12px] text-slate-700 hover:text-teal-700 hover:bg-slate-50 transition-all duration-300 transform hover:scale-105 hover:translate-x-1 group/dropdown relative overflow-hidden" aria-label={subLabel}>
                        <span class="relative z-10 group-hover/dropdown:tracking-wide transition-all duration-300">{subLabel}</span>
                        <div class="absolute inset-0 bg-gradient-to-r from-teal-50 to-cyan-50 opacity-0 group-hover/dropdown:opacity-100 transition-opacity duration-300"></div>
                      </a>;
                    })}
                  </div>
                </div>
              </>
            ) : (
              <a href={href} class={`flex items-center px-2.5 py-1 text-[12px] font-medium rounded-md transition-all duration-500 focus:outline-none focus-visible:ring-2 focus-visible:ring-teal-500 transform hover:scale-105 hover:shadow-md hover:-translate-y-0.5 relative overflow-hidden group ${isActive ? 'text-teal-700 bg-teal-50' : 'text-slate-700 hover:text-teal-700 hover:bg-gradient-to-r hover:from-slate-50 hover:to-teal-50/50'}`}>
                <span class="relative z-10 group-hover:tracking-wide transition-all duration-300">{label}</span>
                <div class="absolute bottom-0 left-1/2 transform -translate-x-1/2 w-0 h-0.5 bg-gradient-to-r from-teal-500 to-cyan-500 transition-all duration-500 group-hover:w-full"></div>
                <div class="absolute inset-0 bg-gradient-to-r from-teal-500/10 to-cyan-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-md animate-pulse"></div>
              </a>
            )}
          </div>;
        })}
      </div>

      <!-- Desktop Header Utility: keep search only, remove CTAs -->
      <div class="hidden lg:flex items-center space-x-3 shrink-0">
        <div class="w-44 lg:w-48 xl:w-56 transform transition-all duration-500 hover:scale-105 focus-within:scale-105 relative group">
          <SearchBar placeholder="Search..." />
          <div class="absolute inset-0 bg-gradient-to-r from-teal-500/5 to-cyan-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-lg pointer-events-none"></div>
        </div>
      </div>

      <!-- Mobile Controls: hamburger trigger (visible on small screens) -->
      <div class="lg:hidden ml-auto flex items-center">
        <button id="mobile-trigger" aria-controls="mobile-menu" aria-expanded="false" aria-label="Open menu" class="p-2 rounded-md text-slate-700 hover:bg-slate-50 transition-all duration-300">
          <span class="sr-only">Open menu</span>
          <span class="block w-5 h-0.5 bg-slate-700 rounded"></span>
          <span class="block w-5 h-0.5 bg-slate-700 rounded mt-1"></span>
          <span class="block w-5 h-0.5 bg-slate-700 rounded mt-1"></span>
        </button>
      </div>
    </nav>

    <!-- Mobile Menu -->
  </div>
</header>

<!-- Mobile Menu: moved outside header for full-viewport coverage -->
<div id="mobile-menu" class="lg:hidden fixed inset-0 w-screen h-screen bg-white z-[9999] transform translate-x-full transition-transform duration-300 ease-out hidden overflow-y-auto overscroll-contain touch-pan-y" aria-hidden="true" role="dialog" aria-modal="true">
  <div class="flex items-center justify-between p-4 pt-[env(safe-area-inset-top)] border-b border-slate-200 bg-gradient-to-r from-slate-50 to-white relative overflow-hidden">
    <span class="text-lg font-semibold text-slate-900 tracking-wide relative z-10">Menu</span>
    <button data-close class="p-2 rounded-md text-slate-700 hover:bg-slate-50 transition-all duration-300 transform hover:scale-110 hover:rotate-90 group relative overflow-hidden">
      <Icon name="close" class="w-5 h-5 group-hover:scale-125 transition-all duration-300" />
      <div class="absolute inset-0 bg-gradient-to-r from-red-500/10 to-pink-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-md"></div>
    </button>
    <div class="absolute inset-0 bg-gradient-to-r from-teal-500/5 to-cyan-500/5 opacity-50"></div>
  </div>

  <!-- Mobile search -->
  <div class="p-4 border-b border-slate-200">
    <div class="max-w-full">
      <SearchBar placeholder="Search..." />
    </div>
  </div>
  
  <div class="h-full pb-24">
    <nav class="p-4 space-y-1">
      {menu && menu.map(item => {
        const href = item.href;
        const isActive = currentPath === href || currentPath.startsWith(href + '/') || (href !== '/' && currentPath.startsWith(href));
        const hasChildren = item.children && item.children.length > 0;
        const label = item.label_en; // Always use English labels
        
        if (hasChildren) {
          // For SERVICES, use the standard expandable structure and list only the 5 category links
          if (label === 'SERVICES') {
            return (
              <details class="group">
                <summary class={`flex items-center justify-between p-3 rounded-lg cursor-pointer transition-all duration-300 transform hover:scale-105 hover:translate-x-1 group/summary relative overflow-hidden ${
                  isActive ? 'text-teal-700 bg-teal-50' : 'text-slate-700 hover:text-teal-700 hover:bg-gradient-to-r hover:from-slate-50 hover:to-teal-50/50'
                }`}>
                  <span class="font-medium group-hover/summary:tracking-wide transition-all duration-300 relative z-10">{label}</span>
                  <Icon name="chevronDown" class="w-4 h-4 transition-all duration-300 group-open:rotate-180 group-hover/summary:scale-110" />
                  <div class="absolute bottom-0 left-0 w-0 h-0.5 bg-gradient-to-r from-teal-500 to-cyan-500 transition-all duration-300 group-hover/summary:w-full"></div>
                </summary>
                <div class="mt-2 ml-4 space-y-1">
                  {item.children && item.children.map(sub => {
                    const subHref = sub.href;
                    const subLabel = sub.label_en;
                    const subIsActive = currentPath.startsWith(subHref);
                    return (
                      <a 
                        href={subHref}
                        class={`block p-2 rounded-md text-sm transition-all duration-300 transform hover:scale-105 hover:translate-x-1 group/sub relative overflow-hidden ${
                          subIsActive ? 'text-teal-700 bg-teal-50' : 'text-slate-600 hover:text-teal-700 hover:bg-gradient-to-r hover:from-slate-50 hover:to-teal-50/50'
                        }`}
                      >
                        <span class="group-hover/sub:tracking-wide transition-all duration-300 relative z-10">{subLabel}</span>
                        <div class="absolute bottom-0 left-0 w-0 h-0.5 bg-gradient-to-r from-teal-500 to-cyan-500 transition-all duration-300 group-hover/sub:w-full"></div>
                      </a>
                    );
                  })}
                </div>
              </details>
            );
          }

          return (
            <details class="group">
              <summary class={`flex items-center justify-between p-3 rounded-lg cursor-pointer transition-all duration-300 transform hover:scale-105 hover:translate-x-1 group/summary relative overflow-hidden ${
                isActive ? 'text-teal-700 bg-teal-50' : 'text-slate-700 hover:text-teal-700 hover:bg-gradient-to-r hover:from-slate-50 hover:to-teal-50/50'
              }`}>
                <span class="font-medium group-hover/summary:tracking-wide transition-all duration-300 relative z-10">{label}</span>
                <Icon name="chevronDown" class="w-4 h-4 transition-all duration-300 group-open:rotate-180 group-hover/summary:scale-110" />
                <div class="absolute bottom-0 left-0 w-0 h-0.5 bg-gradient-to-r from-teal-500 to-cyan-500 transition-all duration-300 group-hover/summary:w-full"></div>
              </summary>
              <div class="mt-2 ml-4 space-y-1">
                {item.children && item.children.map(sub => {
                  const subHref = sub.href;
                  const subLabel = sub.label_en;
                  const subIsActive = currentPath.startsWith(subHref);
                  const hasSubChildren = sub.children && sub.children.length > 0;
                  
                  if (hasSubChildren) {
                    return (
                      <details class="group ml-2">
                        <summary class={`flex items-center justify-between p-2 rounded-md cursor-pointer text-sm transition-all duration-300 transform hover:scale-105 hover:translate-x-1 group/sub relative overflow-hidden ${
                          subIsActive ? 'text-teal-700 bg-teal-50' : 'text-slate-600 hover:text-teal-700 hover:bg-gradient-to-r hover:from-slate-50 hover:to-teal-50/50'
                        }`}>
                          <span class="group-hover/sub:tracking-wide transition-all duration-300 relative z-10">{subLabel}</span>
                          <Icon name="chevronDown" class="w-3 h-3 transition-all duration-300 group-open:rotate-180 group-hover/sub:scale-110" />
                          <div class="absolute bottom-0 left-0 w-0 h-0.5 bg-gradient-to-r from-teal-500 to-cyan-500 transition-all duration-300 group-hover/sub:w-full"></div>
                        </summary>
                        <div class="mt-1 ml-4 space-y-1">
                          {sub.children && sub.children.map(nested => {
                            const nestedHref = nested.href;
                            const nestedLabel = nested.label_en;
                            const nestedIsActive = currentPath.startsWith(nestedHref);
                            return (
                              <a 
                                href={nestedHref}
                                class={`block p-2 rounded-md text-xs transition-all duration-300 transform hover:scale-105 hover:translate-x-1 group/nested relative overflow-hidden ${
                                  nestedIsActive ? 'text-teal-700 bg-teal-50' : 'text-slate-500 hover:text-teal-700 hover:bg-gradient-to-r hover:from-slate-50 hover:to-teal-50/50'
                                }`}
                              >
                                <span class="group-hover/nested:tracking-wide transition-all duration-300 relative z-10">{nestedLabel}</span>
                                <div class="absolute bottom-0 left-0 w-0 h-0.5 bg-gradient-to-r from-teal-500 to-cyan-500 transition-all duration-300 group-hover/nested:w-full"></div>
                              </a>
                            );
                          })}
                        </div>
                      </details>
                    );
                  } else {
                    return (
                      <a 
                        href={subHref}
                        class={`block p-2 rounded-md text-sm transition-all duration-300 transform hover:scale-105 hover:translate-x-1 group/sub relative overflow-hidden ${
                          subIsActive ? 'text-teal-700 bg-teal-50' : 'text-slate-600 hover:text-teal-700 hover:bg-gradient-to-r hover:from-slate-50 hover:to-teal-50/50'
                        }`}
                      >
                        <span class="group-hover/sub:tracking-wide transition-all duration-300 relative z-10">{subLabel}</span>
                        <div class="absolute bottom-0 left-0 w-0 h-0.5 bg-gradient-to-r from-teal-500 to-cyan-500 transition-all duration-300 group-hover/sub:w-full"></div>
                      </a>
                    );
                  }
                })}
              </div>
            </details>
          );
        } else {
          return (
            <a 
              href={href}
              class={`block p-3 rounded-lg font-medium transition-all duration-300 transform hover:scale-105 hover:translate-x-1 group/main relative overflow-hidden ${
                isActive ? 'text-teal-700 bg-teal-50' : 'text-slate-700 hover:text-teal-700 hover:bg-gradient-to-r hover:from-slate-50 hover:to-teal-50/50'
              }`}
            >
              <span class="group-hover/main:tracking-wide transition-all duration-300 relative z-10">{label}</span>
              <div class="absolute bottom-0 left-0 w-0 h-0.5 bg-gradient-to-r from-teal-500 to-cyan-500 transition-all duration-300 group-hover/main:w-full"></div>
            </a>
          );
        }
      })}
    </nav>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const trigger = document.getElementById('mobile-trigger') as HTMLElement | null;
    const menuRoot = document.getElementById('mobile-menu') as HTMLElement | null;

    if (!trigger || !menuRoot) return;
    let lastFocus: HTMLElement | null = null;

    const focusableSelector = 'a[href], button:not([disabled]), [role="button"], summary, input, select, textarea';

    function trapFocus(e: KeyboardEvent) {
      if (!menuRoot || menuRoot.classList.contains('hidden')) return;
      const focusables = Array.from(menuRoot.querySelectorAll(focusableSelector)) as HTMLElement[];
      const visible = focusables.filter(el => el.offsetParent !== null);
      if (!visible.length) return;
      const first = visible[0];
      const last = visible[visible.length - 1];
      if (e.key === 'Tab') {
        if (e.shiftKey && document.activeElement === first) { e.preventDefault(); last.focus(); }
        else if (!e.shiftKey && document.activeElement === last) { e.preventDefault(); first.focus(); }
      }
      if (e.key === 'Escape') closeMenu();
    }

    function openMenu() {
      if (!trigger || !menuRoot) return;
      lastFocus = document.activeElement instanceof HTMLElement ? document.activeElement : null;
      menuRoot.classList.remove('hidden');
      // ensure start off-screen then animate in
      requestAnimationFrame(() => { if (menuRoot) menuRoot.classList.remove('translate-x-full'); });
      trigger.setAttribute('aria-expanded','true');
      menuRoot.removeAttribute('aria-hidden');
      document.documentElement.classList.add('overflow-hidden');
      document.body.classList.add('overflow-hidden');
      const firstLink = menuRoot.querySelector('a, button, summary') as HTMLElement | null;
      if (firstLink) setTimeout(() => firstLink.focus(), 50);
      document.addEventListener('keydown', trapFocus);
    }

    function closeMenu() {
      if (!trigger || !menuRoot) return;
      menuRoot.classList.add('translate-x-full');
      trigger.setAttribute('aria-expanded','false');
      menuRoot.setAttribute('aria-hidden','true');
      document.documentElement.classList.remove('overflow-hidden');
      document.body.classList.remove('overflow-hidden');
      document.removeEventListener('keydown', trapFocus);
      const lf = lastFocus;
      if (lf) setTimeout(() => lf.focus(), 50);
      setTimeout(() => { if (menuRoot && menuRoot.classList.contains('translate-x-full')) menuRoot.classList.add('hidden'); }, 300);
    }

    trigger.addEventListener('click', () => {
      const open = trigger.getAttribute('aria-expanded') === 'true';
      open ? closeMenu() : openMenu();
    });

    menuRoot.addEventListener('click', (e: MouseEvent) => {
      const t = e.target as Element | null;
      if (!t) return;
      if (t.closest('[data-close]')) return closeMenu();
      if (t.closest('a') && !t.closest('details')) return closeMenu();
    });

    window.addEventListener('resize', () => { if (window.innerWidth >= 1024 && trigger.getAttribute('aria-expanded') === 'true') closeMenu(); });
  });
</script>

<!-- Google Translate Widget -->
<script is:inline type="text/javascript">
  function googleTranslateElementInit() {
    new google.translate.TranslateElement({
      pageLanguage: 'en',
      includedLanguages: 'fi,en',
      layout: google.translate.TranslateElement.InlineLayout.SIMPLE,
      autoDisplay: false
    }, 'langToggle');
  }
</script>
<script is:inline type="text/javascript" src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>

<style>
  /* Hide Google Translate branding and style the widget */
  #langToggle {
    position: relative;
  }

  /* Hide the default Google Translate UI */
  #langToggle .goog-te-gadget {
    font-family: inherit !important;
    font-size: inherit !important;
    color: inherit !important;
  }

  #langToggle .goog-te-gadget-simple {
    background-color: transparent !important;
    border: none !important;
    padding: 0 !important;
    margin: 0 !important;
    font-size: 11px !important;
    color: white !important;
    outline: none !important;
  }

  #langToggle .goog-te-gadget-simple .goog-te-menu-value {
    color: #cbd5e1 !important; /* slate-300 */
    font-size: 11px !important;
    padding: 4px 8px !important;
    border-radius: 4px !important;
    background: transparent !important;
    border: none !important;
    text-decoration: none !important;
    font-weight: 400 !important;
    transition: all 0.3s ease !important;
  }

  #langToggle .goog-te-gadget-simple .goog-te-menu-value:hover {
    color: white !important;
    background-color: rgba(255, 255, 255, 0.1) !important;
    transform: scale(1.05) !important;
  }

  #langToggle .goog-te-gadget-simple .goog-te-menu-value span {
    color: inherit !important;
    font-size: inherit !important;
  }

  #langToggle .goog-te-gadget-simple .goog-te-menu-value span:first-child {
    display: none !important; /* Hide the language name, keep only the code */
  }

  /* Hide the dropdown arrow */
  #langToggle .goog-te-gadget-simple .goog-te-menu-value img {
    display: none !important;
  }

  /* Style for active/translated state */
  html[lang="fi"] #langToggle .goog-te-gadget-simple .goog-te-menu-value,
  .goog-te-combo option[value="fi"]:checked ~ .goog-te-gadget-simple .goog-te-menu-value {
    background-color: #0f766e !important; /* teal-600 */
    color: white !important;
  }

  /* Hide Google Translate banner */
  .goog-te-banner-frame {
    display: none !important;
  }

  .goog-te-menu-frame {
    z-index: 9999 !important;
  }

  /* Custom styling to make it look like button toggle */
  #langToggle .goog-te-gadget-simple {
    display: flex !important;
    align-items: center !important;
  }

  #langToggle .goog-te-gadget-simple .goog-te-menu-value {
    min-width: 32px !important;
    text-align: center !important;
    cursor: pointer !important;
    position: relative !important;
  }

  /* Add EN/FI text overlay */
  #langToggle .goog-te-gadget-simple .goog-te-menu-value:after {
    content: "EN" !important;
    position: absolute !important;
    top: 50% !important;
    left: 50% !important;
    transform: translate(-50%, -50%) !important;
    pointer-events: none !important;
    font-size: 11px !important;
    font-weight: 400 !important;
  }

  /* Show FI when Finnish is selected */
  body.translated-ltr #langToggle .goog-te-gadget-simple .goog-te-menu-value:after,
  html[lang="fi"] #langToggle .goog-te-gadget-simple .goog-te-menu-value:after {
    content: "FI" !important;
  }

  /* Hide original text */
  #langToggle .goog-te-gadget-simple .goog-te-menu-value span {
    opacity: 0 !important;
    font-size: 0 !important;
  }

  /* Remove outline and focus styles that don't match */
  #langToggle * {
    outline: none !important;
    box-shadow: none !important;
  }

  /* Ensure proper positioning */
  #langToggle {
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
  }
</style>
